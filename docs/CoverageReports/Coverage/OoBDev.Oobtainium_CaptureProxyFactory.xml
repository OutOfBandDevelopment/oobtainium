<?xml version="1.0" encoding="utf-8"?>
<CoverageReport scope="OoBDev.Oobtainium.CaptureProxyFactory">
  <Summary>
    <Class>OoBDev.Oobtainium.CaptureProxyFactory</Class>
    <Assembly>OoBDev.Oobtainium</Assembly>
    <Files>
      <File>/home/runner/work/oobtainium/oobtainium/src/OoBDev.Oobtainium/OoBDev.Oobtainium/CaptureProxyFactory.cs</File>
    </Files>
    <Coveredlines>10</Coveredlines>
    <Uncoveredlines>0</Uncoveredlines>
    <Coverablelines>10</Coverablelines>
    <Totallines>28</Totallines>
    <Linecoverage>100</Linecoverage>
    <Coveredbranches>18</Coveredbranches>
    <Totalbranches>20</Totalbranches>
    <Branchcoverage>90</Branchcoverage>
    <Title>src/OoBDev.Oobtainium/OoBDev.Oobtainium.sln - 0.1.0-dev-poc-typebuilding.49</Title>
  </Summary>
  <Metrics>
    <Element name="ctor">
      <Linecoverage>100</Linecoverage>
      <Branchcoverage>100</Branchcoverage>
    </Element>
    <Element name="Create">
      <Linecoverage>100</Linecoverage>
      <Branchcoverage>90.0</Branchcoverage>
    </Element>
  </Metrics>
  <Files>
    <File name="/home/runner/work/oobtainium/oobtainium/src/OoBDev.Oobtainium/OoBDev.Oobtainium/CaptureProxyFactory.cs">
      <LineAnalysis line="1" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using Microsoft.Extensions.Logging;" />
      <LineAnalysis line="2" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using OoBDev.Oobtainium.Recording;" />
      <LineAnalysis line="3" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System;" />
      <LineAnalysis line="4" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System.Reflection;" />
      <LineAnalysis line="5" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="6" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="namespace OoBDev.Oobtainium" />
      <LineAnalysis line="7" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="{" />
      <LineAnalysis line="8" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    public class CaptureProxyFactory : ICaptureProxyFactory" />
      <LineAnalysis line="9" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    {" />
      <LineAnalysis line="10" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        private readonly IServiceProvider? _serviceProvider;" />
      <LineAnalysis line="11" visits="16" coverage="Covered" coveredbranches="" totalbranches="" content="        public CaptureProxyFactory(IServiceProvider? serviceProvider = null) =&gt; _serviceProvider = serviceProvider;" />
      <LineAnalysis line="12" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="13" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public T Create&lt;T&gt;(" />
      <LineAnalysis line="14" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            ICallHandler? handler = null," />
      <LineAnalysis line="15" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            ICallRecorder? recorder = null," />
      <LineAnalysis line="16" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            ILogger&lt;T&gt;? logger = null" />
      <LineAnalysis line="17" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            ) =&gt;" />
      <LineAnalysis line="18" visits="8" coverage="PartiallyCovered" coveredbranches="18" totalbranches="20" content="            CaptureProxy&lt;T&gt;.Create(" />
      <LineAnalysis line="19" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                handler ?? _serviceProvider?.GetService(typeof(ICallHandler)) as ICallHandler ??" />
      <LineAnalysis line="20" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                    new CallHandler(_serviceProvider?.GetService(typeof(ICallBindingStore)) as ICallBindingStore)," />
      <LineAnalysis line="21" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="22" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                recorder ?? _serviceProvider?.GetService(typeof(ICallRecorder)) as ICallRecorder ??" />
      <LineAnalysis line="23" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                    new CallRecorder(_serviceProvider?.GetService(typeof(ILogger&lt;ICallRecorder&gt;)) as ILogger&lt;ICallRecorder&gt;)," />
      <LineAnalysis line="24" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="25" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                logger ?? _serviceProvider?.GetService(typeof(ILogger&lt;T&gt;)) as ILogger&lt;T&gt;" />
      <LineAnalysis line="26" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="            );" />
      <LineAnalysis line="27" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    }" />
      <LineAnalysis line="28" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="}" />
    </File>
  </Files>
</CoverageReport>