<?xml version="1.0" encoding="utf-8"?>
<CoverageReport scope="OoBDev.Oobtainium.TaskExtensions">
  <Summary>
    <Class>OoBDev.Oobtainium.TaskExtensions</Class>
    <Assembly>OoBDev.Oobtainium</Assembly>
    <Files>
      <File>/home/runner/work/oobtainium/oobtainium/src/OoBDev.Oobtainium/OoBDev.Oobtainium/TaskExtensions.cs</File>
    </Files>
    <Coveredlines>13</Coveredlines>
    <Uncoveredlines>3</Uncoveredlines>
    <Coverablelines>16</Coverablelines>
    <Totallines>37</Totallines>
    <Linecoverage>81.2</Linecoverage>
    <Coveredbranches>7</Coveredbranches>
    <Totalbranches>14</Totalbranches>
    <Branchcoverage>50</Branchcoverage>
    <Title>src/OoBDev.Oobtainium/OoBDev.Oobtainium.sln - 0.1.0-dev-poc-typebuilding.49</Title>
  </Summary>
  <Metrics>
    <Element name="AsTask">
      <Linecoverage>77.77</Linecoverage>
      <Branchcoverage>50.0</Branchcoverage>
    </Element>
    <Element name="GetResultOrDefault">
      <Linecoverage>85.71</Linecoverage>
      <Branchcoverage>50.0</Branchcoverage>
    </Element>
  </Metrics>
  <Files>
    <File name="/home/runner/work/oobtainium/oobtainium/src/OoBDev.Oobtainium/OoBDev.Oobtainium/TaskExtensions.cs">
      <LineAnalysis line="1" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System;" />
      <LineAnalysis line="2" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System.Reflection;" />
      <LineAnalysis line="3" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System.Threading.Tasks;" />
      <LineAnalysis line="4" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="5" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="namespace OoBDev.Oobtainium" />
      <LineAnalysis line="6" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="{" />
      <LineAnalysis line="7" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    public static class TaskExtensions" />
      <LineAnalysis line="8" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    {" />
      <LineAnalysis line="9" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public static Task AsTask(this object? input)" />
      <LineAnalysis line="10" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        {" />
      <LineAnalysis line="11" visits="0" coverage="NotCovered" coveredbranches="1" totalbranches="2" content="            if (input == null) return Task.CompletedTask;" />
      <LineAnalysis line="12" visits="2" coverage="PartiallyCovered" coveredbranches="2" totalbranches="4" content="            var task = typeof(Task)" />
      <LineAnalysis line="13" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                .GetMethod(nameof(Task.FromResult), BindingFlags.Static | BindingFlags.Public)" />
      <LineAnalysis line="14" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                ?.MakeGenericMethod(input.GetType())" />
      <LineAnalysis line="15" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                ?.Invoke(null, new[] { input })" />
      <LineAnalysis line="16" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                 as Task" />
      <LineAnalysis line="17" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="                ;" />
      <LineAnalysis line="18" visits="0" coverage="NotCovered" coveredbranches="1" totalbranches="2" content="            if (task == null) return Task.FromException(new NullReferenceException(&quot;Unable to resolve Task.FromResult&lt;&gt;()&quot;));" />
      <LineAnalysis line="19" visits="2" coverage="Covered" coveredbranches="" totalbranches="" content="            return task;" />
      <LineAnalysis line="20" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        }" />
      <LineAnalysis line="21" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="22" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public static object? GetResultOrDefault(this Task? task)" />
      <LineAnalysis line="23" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        {" />
      <LineAnalysis line="24" visits="8" coverage="PartiallyCovered" coveredbranches="1" totalbranches="2" content="            if (task != null)" />
      <LineAnalysis line="25" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            {" />
      <LineAnalysis line="26" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                task.GetAwaiter().GetResult();" />
      <LineAnalysis line="27" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                var taskType = task.GetType();" />
      <LineAnalysis line="28" visits="8" coverage="PartiallyCovered" coveredbranches="1" totalbranches="2" content="                if (taskType.IsGenericType)" />
      <LineAnalysis line="29" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                {" />
      <LineAnalysis line="30" visits="8" coverage="PartiallyCovered" coveredbranches="1" totalbranches="2" content="                    var result = taskType.GetProperty(&quot;Result&quot;)?.GetValue(task, null);" />
      <LineAnalysis line="31" visits="8" coverage="Covered" coveredbranches="" totalbranches="" content="                    return result;" />
      <LineAnalysis line="32" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                }" />
      <LineAnalysis line="33" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            }" />
      <LineAnalysis line="34" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            return null;" />
      <LineAnalysis line="35" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        }" />
      <LineAnalysis line="36" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    }" />
      <LineAnalysis line="37" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="}" />
    </File>
  </Files>
</CoverageReport>