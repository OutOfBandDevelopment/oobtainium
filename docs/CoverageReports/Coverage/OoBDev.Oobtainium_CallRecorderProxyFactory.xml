<?xml version="1.0" encoding="utf-8"?>
<CoverageReport scope="OoBDev.Oobtainium.Recording.CallRecorderProxyFactory">
  <Summary>
    <Class>OoBDev.Oobtainium.Recording.CallRecorderProxyFactory</Class>
    <Assembly>OoBDev.Oobtainium</Assembly>
    <Files>
      <File>/home/runner/work/oobtainium/oobtainium/src/OoBDev.Oobtainium/OoBDev.Oobtainium/Recording/CallRecorderProxyFactory.cs</File>
    </Files>
    <Coveredlines>0</Coveredlines>
    <Uncoveredlines>5</Uncoveredlines>
    <Coverablelines>5</Coverablelines>
    <Totallines>19</Totallines>
    <Linecoverage>0</Linecoverage>
    <Coveredbranches>0</Coveredbranches>
    <Totalbranches>8</Totalbranches>
    <Branchcoverage>0</Branchcoverage>
    <Title>src/OoBDev.Oobtainium/OoBDev.Oobtainium.sln - 0.1.0-dev-poc-typebuilding.49</Title>
  </Summary>
  <Metrics>
    <Element name="WithRecorder">
      <Linecoverage>0</Linecoverage>
      <Branchcoverage>0</Branchcoverage>
    </Element>
  </Metrics>
  <Files>
    <File name="/home/runner/work/oobtainium/oobtainium/src/OoBDev.Oobtainium/OoBDev.Oobtainium/Recording/CallRecorderProxyFactory.cs">
      <LineAnalysis line="1" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using Microsoft.Extensions.Logging;" />
      <LineAnalysis line="2" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System;" />
      <LineAnalysis line="3" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="4" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="namespace OoBDev.Oobtainium.Recording" />
      <LineAnalysis line="5" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="{" />
      <LineAnalysis line="6" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    public class CallRecorderProxyFactory" />
      <LineAnalysis line="7" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    {" />
      <LineAnalysis line="8" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public static T WithRecorder&lt;T&gt;(" />
      <LineAnalysis line="9" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            T instance," />
      <LineAnalysis line="10" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            ICallRecorder? recorder = null," />
      <LineAnalysis line="11" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            IServiceProvider? serviceProvider = null" />
      <LineAnalysis line="12" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="            ) =&gt;" />
      <LineAnalysis line="13" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="8" content="            CallRecorderProxy&lt;T&gt;.Create(" />
      <LineAnalysis line="14" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                instance," />
      <LineAnalysis line="15" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                recorder ?? serviceProvider?.GetService(typeof(ICallRecorder)) as ICallRecorder ??" />
      <LineAnalysis line="16" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    new CallRecorder(serviceProvider?.GetService(typeof(ILogger&lt;ICallRecorder&gt;)) as ILogger&lt;ICallRecorder&gt;)" />
      <LineAnalysis line="17" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            );" />
      <LineAnalysis line="18" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    }" />
      <LineAnalysis line="19" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="}" />
    </File>
  </Files>
</CoverageReport>