name: .NET Core

on:
  push:
    branches: [ main, 'dev/**' ]
    #paths: ['src/**']    
  pull_request:
    branches: [main ]
    paths: ['src/**']   
    
  # support manual execution
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    #runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2      
      with:
        fetch-depth: 0

    #- name: Setup .NET 5
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: 5.0.x
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        
    - name: Setup Project Variables
      run: |
        OUTPUT_PATH=Publish
        TEST_RESULTS_PATH=$OUTPUT_PATH/TestResults
        DOCS_PATH=$OUTPUT_PATH/docs
        RESULTS_PATH=$OUTPUT_PATH/Results     
        BUILD_PROJECT=src/OoBDev.Oobtainium/OoBDev.Oobtainium.sln
        REPORT_PROJECT=src/OoBDev.Oobtainium/OoBDev.Oobtainium.rptproj
        BUILD_CONFIGURATION=Release
        dotnet tool restore
        buildVersion=`dotnet gitversion /output json /showvariable FullSemVer`
        dacVersion=`dotnet gitversion /output json /showvariable AssemblySemVer`
        echo Build Version= $buildVersion
        echo DAC Version= $dacVersion        
        echo "buildVersion=$buildVersion" >> $GITHUB_ENV   
        echo "dacVersion=$dacVersion" >> $GITHUB_ENV
        echo "BUILD_PROJECT=$BUILD_PROJECT" >> $GITHUB_ENV
        echo "REPORT_PROJECT=$REPORT_PROJECT" >> $GITHUB_ENV
        echo "BUILD_CONFIGURATION=$BUILD_CONFIGURATION" >> $GITHUB_ENV
        echo "OUTPUT_PATH=$OUTPUT_PATH" >> $GITHUB_ENV  
        echo "SANDBOX_PATH=$SANDBOX_PATH" >> $GITHUB_ENV 
        echo "TEST_RESULTS_PATH=$TEST_RESULTS_PATH" >> $GITHUB_ENV 
        echo "DOCS_PATH=$DOCS_PATH" >> $GITHUB_ENV 
        echo "RESULTS_PATH=$RESULTS_PATH" >> $GITHUB_ENV    
        mkdir Publish/docs >/dev/null 2>&1

    - name: Restore Project
      run: dotnet restore "$BUILD_PROJECT"
    - name: Build Project
      run: dotnet build "$BUILD_PROJECT" -c $BUILD_CONFIGURATION --no-restore -p:Version=$buildVersion -p:DbVersion=$dacVersion "/bl:logfile=$OUTPUT_PATH/dotnet_build.binlog"
    - name: Test Project
      run: dotnet test "$BUILD_PROJECT" -c $BUILD_CONFIGURATION --no-build --no-restore --nologo --collect:"XPlat Code Coverage" -r "$TEST_RESULTS_PATH" --filter "TestCategory=Unit|TestCategory=Simulate" -s "src/OoBDev.Oobtainium/.runsettings" /p:CollectCoverage=true /p:CopyLocalLockFileAssemblies=true
    - name: Pack Project
      run: dotnet pack "$BUILD_PROJECT" -c $BUILD_CONFIGURATION --no-build --no-restore -o "$OUTPUT_PATH/Nuget" -p:PackageVersion=$buildVersion
    - name: Publish Project
      run: dotnet publish "$BUILD_PROJECT" -c $BUILD_CONFIGURATION  --no-build --no-restore -o "$RESULTS_PATH/Binary"

     ## Don't publish PR's
    - name: Publish Project to Nuget
      if: github.event_name != 'pull_request'
      run: dotnet nuget push "$OUTPUT_PATH/Nuget/*.nupkg" -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate
       
    #- name: Build Coverage Report
    #  run: dotnet reportgenerator "-reports:$TEST_RESULTS_PATH/**/coverage.cobertura.xml" "-targetDir:$RESULTS_PATH/Coverage" "-reportTypes:Xml" "-title:$BUILD_PROJECT - $buildVersion"
    #- name: Build Reports
    #  run: dotnet build "$REPORT_PROJECT" -f netcoreapp3.1 -p:PublishedBinaries=$RESULTS_PATH/Binary -p:SolutionDir=src -v n
      
    ## If not   just attach the docs as an artifact
    - name: Publish Documents
      if: github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@v2
      with:
        name: OoBDev.Oobtainium_Documents
        path: Publish/docs/  
    - name: Commit Tag
      if: github.ref != 'refs/heads/main' && github.event_name != 'pull_request'
      uses: EndBug/add-and-commit@v5
      with:
        add: 'docs'
        message: '${{env.buildVersion}} (${{env.dacVersion}})'
        tag: '${{env.buildVersion}}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    
    ## If main publish the docs
    #- name: Update Documentation
    #  if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: rsync -r mkdir /var/data/backup >/dev/null 2>&1 docs
    - name: Commit Documentation and Tag
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      uses: EndBug/add-and-commit@v5
      with:
        add: 'docs'
        message: '${{env.buildVersion}} (${{env.dacVersion}})'
        tag: '${{env.buildVersion}}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    